From 81f6046bb93030c91ef54f45a640c132b70ab7b4 Mon Sep 17 00:00:00 2001
From: mohsin shan <mohsinshan1k@gmail.com>
Date: Mon, 24 Apr 2017 01:04:54 +0500
Subject: [PATCH] Added ID sysfs attribute to ch341 Serial Driver.

---
 drivers/usb/serial/ch341.c | 48 +++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 47 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/serial/ch341.c b/drivers/usb/serial/ch341.c
index c0e7804..c9869f6 100644
--- a/drivers/usb/serial/ch341.c
+++ b/drivers/usb/serial/ch341.c
@@ -82,6 +82,11 @@
 #define CH341_LCR_CS6          0x01
 #define CH341_LCR_CS5          0x00
 
+#define MY_ID "3330c197cbcb"
+#define MY_ID_LEN 12
+
+static int create_sysfs_attrs(struct usb_serial_port *port);
+
 static const struct usb_device_id id_table[] = {
 	{ USB_DEVICE(0x4348, 0x5523) },
 	{ USB_DEVICE(0x1a86, 0x7523) },
@@ -285,7 +290,7 @@ static int ch341_port_probe(struct usb_serial_port *port)
 		goto error;
 
 	usb_set_serial_port_data(port, priv);
-
+	create_sysfs_attrs(port);
 	return 0;
 
 error:	kfree(priv);
@@ -655,3 +660,44 @@ static int ch341_reset_resume(struct usb_serial *serial)
 
 MODULE_LICENSE("GPL");
 
+
+
+
+
+
+static ssize_t id_show(struct device *dev, struct device_attribute *attr,
+		       char *buf)
+{
+	char *id = MY_ID;
+
+	strncpy(buf, id, MY_ID_LEN);
+	return MY_ID_LEN;
+}
+
+static ssize_t id_store(struct device *dev, struct device_attribute *attr,
+			const char *buf, size_t count)
+{
+	char *id = MY_ID;
+
+	if ((count != MY_ID_LEN) || (strncmp(id, buf, MY_ID_LEN)))
+		return -EINVAL;
+	else
+		return MY_ID_LEN;
+}
+
+static DEVICE_ATTR_RW(id);
+
+
+static int create_sysfs_attrs(struct usb_serial_port *port)
+{
+	int retval = 0;
+
+	retval = device_create_file(&port->dev, &dev_attr_id);
+	return retval;
+}
+
+static void remove_sysfs_attrs(struct usb_serial_port *port)
+{
+	 device_remove_file(&port->dev, &dev_attr_id);
+
+}
-- 
1.9.1

